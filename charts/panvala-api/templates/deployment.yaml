apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "panvala-api.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "panvala-api.name" . }}
    helm.sh/chart: {{ include "panvala-api.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "panvala-api.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "panvala-api.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.containerPort }}
              protocol: TCP
          env:
            - name: NODE_ENV
              value: {{ .Values.node_env }}
            # Database values (from config map)
            - name: PRODUCTION_HOST
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: host
            - name: PRODUCTION_PORT
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: port
            - name: PRODUCTION_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: name
            - name: PRODUCTION_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: user
            # Read database password from secret
            - name: PRODUCTION_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: databasePassword
            - name: GATEKEEPER_ADDRESS
            # Contract info (from config map)
              valueFrom:
                configMapKeyRef:
                  name: contracts-config
                  key: gatekeeper
            - name: TOKEN_CAPACITOR_ADDRESS
              valueFrom:
                configMapKeyRef:
                  name: contracts-config
                  key: tokenCapacitor
            # IPFS
            - name: IPFS_HOST
              value: {{ .Values.ipfsHost }}
            - name: IPFS_PORT
              value: {{ .Values.ipfsPort | quote }}
            # Web3
            - name: RPC_ENDPOINT
              value: {{ .Values.web3Host }}
          livenessProbe:
            httpGet:
              path: /
              port: http
        #   readinessProbe:
        #     httpGet:
        #       path: /
        #       port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
